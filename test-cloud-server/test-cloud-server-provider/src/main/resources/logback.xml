<?xml version="1.0" encoding="UTF-8"?>
<!-- 级别从高到低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->
<!-- 以下 每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志 -->
<!-- scan 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 -->
<!-- scanPeriod 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
  <!-- 彩色日志 -->
  <!-- 彩色日志依赖的渲染类 -->
  <conversionRule conversionWord="clr"
    converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
  <conversionRule conversionWord="wex"
    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
  <conversionRule conversionWord="wEx"
    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
  <!-- 彩色日志格式 -->

  <!-- 控制台日志 -->
  <property name="CONSOLE_LOG_PATTERN"
    value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
  <!-- 文件日志 -->
  <property name="FILE_LOG_PATTERN"
    value="[%X{TRACE_ID}] %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger - %msg%n"/>

  <property name="LOG_DIR" value="${app.log.dir}"/>

  <!-- 定义日志文件 输出位置 -->
  <!--<property name="LOG_DIR" value="/home/admin/logs/java/uzbus/cockpit_manage"/>-->

  <!-- 日志最大的历史 30天 -->
  <property name="MAX_HISTORY" value="30"/>
  <!--编码格式-->
  <property name="CHARSET" value="UTF-8"/>

  <!-- Console 输出设置 -->
  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>${CONSOLE_LOG_PATTERN}</pattern>
    </encoder>
  </appender>

  <!-- ERROR级别日志 -->
  <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 RollingFileAppender -->
  <appender name="ERROR"
    class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!-- 过滤器，只记录WARN级别的日志 -->
    <!-- 果日志级别等于配置级别，过滤器会根据onMath 和 onMismatch接收或拒绝日志。 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <!-- 设置过滤级别 -->
      <level>ERROR</level>
      <!-- 用于配置符合过滤条件的操作 -->
      <onMatch>ACCEPT</onMatch>
      <!-- 用于配置不符合过滤条件的操作 -->
      <onMismatch>DENY</onMismatch>
    </filter>
    <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!--日志输出位置 可相对、和绝对路径 -->
      <fileNamePattern>
        ${LOG_DIR}/%d{yyyy-MM-dd}/error-log.log
      </fileNamePattern>
      <!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6， 则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件是，那些为了归档而创建的目录也会被删除 -->
      <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>
        <!-- 设置日志输出格式 -->
        ${FILE_LOG_PATTERN}
      </pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>

  <!-- WARN级别日志 appender -->
  <appender name="WARN"
    class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!-- 过滤器，只记录WARN级别的日志 -->
    <!-- 果日志级别等于配置级别，过滤器会根据onMath 和 onMismatch接收或拒绝日志。 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <!-- 设置过滤级别 -->
      <level>WARN</level>
      <!-- 用于配置符合过滤条件的操作 -->
      <onMatch>ACCEPT</onMatch>
      <!-- 用于配置不符合过滤条件的操作 -->
      <onMismatch>DENY</onMismatch>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!--日志输出位置 可相对、和绝对路径 -->
      <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/warn-log.log
      </fileNamePattern>
      <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>
        <!-- 设置日志输出格式 -->
        ${FILE_LOG_PATTERN}
      </pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>


  <!-- INFO级别日志 appender -->
  <appender name="INFO"
    class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <!-- <filter class="ch.qos.logback.core.filter.EvaluatorFilter"> <evaluator>
      <expression>level > DEBUG</expression> </evaluator> <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch> </filter> -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/info-log.log
      </fileNamePattern>
      <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>
        <!-- 设置日志输出格式 -->
        ${FILE_LOG_PATTERN}
      </pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>
  <appender name="SEND_OPERATOR"
    class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <!-- <filter class="ch.qos.logback.core.filter.EvaluatorFilter"> <evaluator>
      <expression>level > DEBUG</expression> </evaluator> <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch> </filter> -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/send-operator-log.log
      </fileNamePattern>
      <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>
        <!-- 设置日志输出格式 -->
        ${FILE_LOG_PATTERN}
      </pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>

  <appender name="RECEIVED"
    class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <!-- <filter class="ch.qos.logback.core.filter.EvaluatorFilter"> <evaluator>
      <expression>level > DEBUG</expression> </evaluator> <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch> </filter> -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/received-log.log
      </fileNamePattern>
      <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>
        <!-- 设置日志输出格式 -->
        ${FILE_LOG_PATTERN}
      </pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>
  <appender name="ENCRYPTION"
    class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <!-- <filter class="ch.qos.logback.core.filter.EvaluatorFilter"> <evaluator>
      <expression>level > DEBUG</expression> </evaluator> <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch> </filter> -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/encryption.log
      </fileNamePattern>
      <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>
        <!-- 设置日志输出格式 -->
        ${FILE_LOG_PATTERN}
      </pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>

  <appender name="DECRYPTION"
    class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <!-- <filter class="ch.qos.logback.core.filter.EvaluatorFilter"> <evaluator>
      <expression>level > DEBUG</expression> </evaluator> <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch> </filter> -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/decryption.log
      </fileNamePattern>
      <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>
        <!-- 设置日志输出格式 -->
        ${FILE_LOG_PATTERN}
      </pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>

  <!-- DEBUG级别日志 appender -->
  <appender name="DEBUG"
    class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>DEBUG</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/debug-log.log
      </fileNamePattern>
      <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>
        <!-- 设置日志输出格式 -->
        ${FILE_LOG_PATTERN}
      </pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>


  <!-- TRACE级别日志 appender -->
  <appender name="TRACE"
    class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>TRACE</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/trace-log.log
      </fileNamePattern>
      <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>
        <!-- 设置日志输出格式 -->
        ${FILE_LOG_PATTERN}
      </pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>

  <logger name="com.uzbus.evcs.bee.device.web.controller.test.EncryptionLog" level="INFO"
    additivity="false">
    <appender-ref ref="ENCRYPTION"/>
  </logger>

  <logger name="com.uzbus.evcs.bee.device.web.controller.test.DecryptionLog" level="INFO"
    additivity="false">
    <appender-ref ref="DECRYPTION"/>
  </logger>

  <logger name="com.uzbus.evcs.bee.core.base.BusinessHttpService" level="INFO"
    additivity="true">
    <appender-ref ref="SEND_OPERATOR"/>
  </logger>

  <logger name="com.uzbus.evcs.bee.device.web.aop.RPCLogAspect" level="INFO"
    additivity="true">
    <appender-ref ref="RECEIVED"/>
  </logger>

  <!-- root级别 DEBUG -->
  <root>
    <!-- 打印debug级别日志及以上级别日志 -->
    <level value="INFO"/>
    <!-- 控制台输出 -->
    <appender-ref ref="CONSOLE"/>
    <!-- 文件输出 -->
    <appender-ref ref="ERROR"/>
    <appender-ref ref="INFO"/>
    <appender-ref ref="WARN"/>
    <appender-ref ref="DEBUG"/>
    <appender-ref ref="TRACE"/>
  </root>


</configuration>